AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
    Default: fiap-lab
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.medium
    AllowedValues: [t2.nano, t2.micro, t2.small, t2.medium, t2.large, t2.xlarge, t2.2xlarge,
      t3.nano, t3.micro, t3.small, t3.medium, t3.large, t3.xlarge, t3.2xlarge,
      m4.large, m4.xlarge, m4.2xlarge, m4.4xlarge, m4.10xlarge,
      m5.large, m5.xlarge, m5.2xlarge, m5.4xlarge,
      c5.large, c5.xlarge, c5.2xlarge, c5.4xlarge, c5.9xlarge,
      g3.8xlarge,
      r5.large, r5.xlarge, r5.2xlarge, r5.4xlarge, r3.12xlarge,
      i3.xlarge, i3.2xlarge, i3.4xlarge, i3.8xlarge,
      d2.xlarge, d2.2xlarge, d2.4xlarge, d2.8xlarge]
    ConstraintDescription: must be a valid EC2 instance type.
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  LatestAmiId:
    Type : String
    Default: ami-05801d0a3c8e4c443
  IpMaster:
    Description: The IP address of the Jenkins master
    Type: String
    MinLength: 7
    MaxLength: 18
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})
    ConstraintDescription: must be a valid IP of the form x.x.x.x.
Resources:
  ec2Role:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub jenkins-agent-${AWS::StackName}
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AdministratorAccess
  ec2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      InstanceProfileName: !Sub jenkins-agent-${AWS::StackName}
      Path: /
      Roles: 
        - !Ref ec2Role
  EC2Instance:
    Type: AWS::EC2::Instance
    
    Properties:
      InstanceType: !Ref 'InstanceType'
      SecurityGroups: [!Ref 'InstanceSecurityGroup']
      KeyName: !Ref 'KeyName'
      ImageId: !Ref 'LatestAmiId'
      IamInstanceProfile: !Ref ec2InstanceProfile
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-Jenkins-agent'
        - Key: Jenkins
          Value: agent
      UserData:
        Fn::Base64: !Sub |
           #!/bin/bash -xe
           exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1
            sudo apt update -y
            sudo apt install awscli -y
            aws s3 cp s3://teste-cfn-2018/jenkins/script-jenkins-agent.sh .
            awk '{gsub(/USERNAME/,"admin")}1' script-jenkins-agent.sh > temp.txt && mv temp.txt script-jenkins-agent.sh
            awk '{gsub(/PASSWORD/,"12345678")}1' script-jenkins-agent.sh > temp.txt && mv temp.txt script-jenkins-agent.sh
            awk '{gsub(/ip_master/,"${IpMaster}")}1' script-jenkins-agent.sh > temp.txt && mv temp.txt script-jenkins-agent.sh

            sudo chmod +X script-jenkins-agent.sh
            sudo bash script-jenkins-agent.sh
      BlockDeviceMappings: 
        - DeviceName: "/dev/sda1"
          Ebs: 
            VolumeType: gp2
            VolumeSize: 40
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: !Ref 'SSHLocation'
      - IpProtocol: tcp
        FromPort: 8080
        ToPort: 8080
        CidrIp: !Ref 'SSHLocation'
      - IpProtocol: tcp
        FromPort: 50000
        ToPort: 50000
        CidrIp: !Ref 'SSHLocation'
      - IpProtocol: tcp
        FromPort: 0
        ToPort: 65000
        CidrIp: !Ref 'SSHLocation'
      
Outputs:
  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value: !Ref 'EC2Instance'
  AZ:
    Description: Availability Zone of the newly created EC2 instance
    Value: !GetAtt [EC2Instance, AvailabilityZone]
  PublicDNS:
    Description: Public DNSName of the newly created EC2 instance
    Value: !GetAtt [EC2Instance, PublicDnsName]
  PublicIP:
    Description: Public IP address of the newly created EC2 instance
    Value: !GetAtt [EC2Instance, PublicIp]
